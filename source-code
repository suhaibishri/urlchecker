<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Phishing Link Checker (urlchecker)</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #ffffff;
      color: #000;
      margin: 0;
      padding: 20px;
      text-align: center;
    }

    .container, .box-info {
      max-width: 500px;
      width: 100%;
      margin: 20px auto;
      padding: 20px;
      border: 1px solid #000;
      background-color: #f5f5f5;
      box-sizing: border-box;
    }

    input, button {
      width: 100%;
      padding: 12px;
      font-size: 16px;
      margin-top: 10px;
      box-sizing: border-box;
    }

    button {
      background-color: #007BFF;
      color: white;
      border: 1px solid #000;
      cursor: pointer;
    }

    .result {
      margin-top: 15px;
      font-weight: bold;
    }

    .safe {
      color: white;
      background-color: green;
      padding: 10px;
      border-radius: 4px;
    }

    .phishing {
      color: white;
      background-color: red;
      padding: 10px;
      border-radius: 4px;
    }

    #last-updated {
      margin-top: 15px;
      font-size: 14px;
      color: #555;
    }

    @media (max-width: 600px) {
      body {
        padding: 10px;
      }

      input, button {
        font-size: 15px;
      }

      .container, .box-info {
        padding: 15px;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>Phishing Link Checker</h2>
    <input type="text" id="url" placeholder="Enter a URL (e.g. https://example.com)">
    <button onclick="checkURL()">Check</button>
    <div id="result" class="result"></div>
    <div id="last-updated">Loading last update...</div>
  </div>

  <div class="box-info">
    This tool helps you check if a suspicious link is known for phishing.<br><br>
    When you enter a URL and click "Check", the system compares it with an open-source database containing thousands of reported phishing sites.<br><br>
    If the link is found in the list, you will be warned that it's potentially dangerous.<br><br>
    While it doesn't guarantee 100% safety, it's a helpful step to avoid falling into online scams.
  </div>
    <footer style="text-align: center;  font-size: 14px; color: #333;">
  <p style="margin: 5px 0;">
    Site created by 
    <a href="https://www.linkedin.com/in/suhaibishri/" target="_blank" style="color: #007BFF; text-decoration: none;">SUHAIB AL-BISHRI</a>
  </p>
  <p style="margin: 5px 0;">
    <a href="https://github.com/suhaibishri" target="_blank" style="color: #555; text-decoration: none;">github.com/suhaibishri</a>
  </p>
  <p style="margin: 5px 0;">
    ¬© 2025 | Version 1.0
  </p>
</footer>


  <script>
    async function checkURL() {
      const input = document.getElementById('url').value.trim();
      const result = document.getElementById('result');
      result.textContent = 'Checking...';
      result.className = 'result';

      let url = input;
      if (!url.startsWith("http://") && !url.startsWith("https://")) {
        url = "http://" + url;
      }

      let host;
      try {
        const parsed = new URL(url);
        host = parsed.hostname.toLowerCase().replace(/^www\./, '');
      } catch (e) {
        result.textContent = '‚ö†Ô∏è Invalid URL';
        return;
      }

      try {
        const [res1, res2, res3] = await Promise.all([
          fetch("https://raw.githubusercontent.com/Phishing-Database/Phishing.Database/refs/heads/master/phishing-links-ACTIVE.txt"),
          fetch("https://raw.githubusercontent.com/Phishing-Database/Phishing.Database/master/phishing-links-NEW-today.txt"),
          fetch("https://raw.githubusercontent.com/Phishing-Database/Phishing.Database/refs/heads/master/phishing-links-INACTIVE.txt")
        ]);

        const text1 = await res1.text();
        const text2 = await res2.text();
        const text3 = await res3.text();

        const links = text1.split("\n").concat(text2.split("\n")).concat(text3.split("\n"));

        const found = links.some(phishURL => {
          try {
            const phishHost = new URL(phishURL.trim()).hostname.toLowerCase().replace(/^www\./, '');
            return host === phishHost || host.endsWith('.' + phishHost);
          } catch {
            return false;
          }
        });

        if (found) {
          result.textContent = "üö® Phishing site!";
          result.className = "result phishing";
        } else {
          result.textContent = `‚úÖ The link "${host}" is safe.`;
          result.className = "result safe";
        }
      } catch (e) {
        result.textContent = '‚ö†Ô∏è Error loading database.';
        console.error(e);
      }
    }

    async function loadLastUpdate() {
      try {
        const res = await fetch('https://api.github.com/repos/Phishing-Database/Phishing.Database/commits');
        const data = await res.json();
        const lastDate = new Date(data[0].commit.author.date);
        const formatted = lastDate.toLocaleString();
        document.getElementById('last-updated').textContent = `üïí Last updated: ${formatted}`;
      } catch (e) {
        document.getElementById('last-updated').textContent = '‚ö†Ô∏è Could not fetch last update time.';
        console.error(e);
      }
    }

    window.onload = loadLastUpdate;
  </script>
</body>
</html>
